name: Create Tag

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

    #   - name: Create and push tag
    #     env:
    #       TAG_NAME: ${{ github.event.inputs.tag_name }}
    #       GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #     run: |
    #       echo "Creating tag: ${{ github.event.inputs.tag_name }}"
    #       echo "NEXT_VERSION=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
    #       tag="${{ github.event.inputs.tag_name }}"
    #       message="Release ${{ github.event.inputs.tag_name }}"
    #       git config user.name "${GITHUB_ACTOR}"
    #       git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
    #       git tag -a "${tag}" -m "${message}"
    #       git push origin "${tag}"

    #   - name: Get the new tag
    #     id: get_new_tag
    #     run: |
    #       TAG_NAME=$(git describe --tags --abbrev=0)
    #       echo "Extracted Tag Name: $TAG_NAME"
      
      - name: Create tag using GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${{ github.event.inputs.tag_name }}"
          message="${{ github.event.inputs.tag_name }}"
          commit_sha=$(git rev-parse HEAD)
          
          echo "Creating tag via GitHub API..."
          echo "Tag: $tag"
          echo "Commit SHA: $commit_sha"
          
          # Create the tag object
          gh api -F tag="$tag" -F message="$message" -F object="$commit_sha" -F type=commit /repos/${{ github.repository }}/git/tags
          
          # Create the reference
          gh api -F ref="refs/tags/$tag" -F sha="$commit_sha" /repos/${{ github.repository }}/git/refs
          
          echo "Tag created successfully via GitHub API"
      
      - name: Get the new tag
        id: get_new_tag_api
        run: |
          # Fetch the latest tags from remote to sync with API-created tag
          git fetch --tags
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "Extracted Tag Name: $TAG_NAME"

    #   - name: Get tag via GitHub API
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     run: |
    #       # Option 1: Use input (current method)
    #       tag="${{ github.event.inputs.tag_name }}"
          
    #       # Option 2: Get the latest tag from git
    #       # latest_tag=$(git describe --tags --abbrev=0)
          
    #       # Option 3: Get the tag that was just created (from previous step)
    #       # tag=$(git tag --sort=-version:refname | head -n1)
          
    #       # Option 4: Use environment variable if set in previous step
    #       # tag="$NEXT_VERSION"
          
    #       echo "Using tag: $tag"
    #       echo "Fetching tag information via GitHub API..."
    #       tag_info=$(gh api /repos/${{ github.repository }}/git/refs/tags/$tag)
    #       echo "Tag information: $tag_info"
          
    #       # Get all releases to check for drafts 
    #       releases=$(gh api /repos/${{ github.repository }}/releases)
    #       echo "Repository releases fetched"
          
    #       # Print extracted tag name
    #       echo "Extracted Tag Name: $tag"
          
